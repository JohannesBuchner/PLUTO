Release Notes for Chombo version 3.2             March 2014

You can contact the Chombo development team at <chombo@hpcrdm.lbl.gov> and
the Chombo users e-mail group at <chombousers@hpcrd.lbl.gov>

- We have implemented interfaces to the PETSc solver library
  (http://www.mcs.anl.gov/petsc/) which generate matrices for discretizations
  on AMR hierachies of grids for use in PETSc solvers. This is useful for
  problems, such as those with geometrically complex material coefficients,
  in which our native geometric multigrid solvers are not efficient. An
  accompanying single-level interface is also useful as a bottom-solver for
  use with our geometric multigrid solvers. Details can be found in Chapter
  7 in doc/chomboDesign.pdf. 

- Chombo has updated to use the HDF5 1.8 API, although support for the 1.6
  API is still in place for this release. This means (among other things)
  that the -DH5_USE_16_API compiler flag is no longer required.

- Hybrid parallelism is now possible in Chombo, the base classes have been 
  made thread-safe. OpenMP is used in some of the library code including 
  Godunov and Poisson solvers. Among the released examples AMRGodonov and
  AMRPoisson/exexCell can use OpenMP. 

  Current status: There are several problems with the OpenMP implementation
  that are being corrected.  In a few weeks, corrections will be merged
  into the Chombo 3.2 release to make the OpenMP code fully functional.

- Embedded boundary generation has been optimized for run time, memory usage,
  and parallel load balancing.  

- We have added an embedded-boundary (EB) adaptive mesh refinement
  (AMR) compressible Navier-Stokes code in releasedExamples/EBAMRCNS. 

- Also, as one might expect, this release contains many (well, not
  *that* many) bugfixes and minor capability upgrades over the 3.1
  release. 


Release Notes for Chombo version 3.1             March 2012

It has been a long time.  This is not a major feature upgrade of Chombo but
this does contain many bug fixes from over the years.

- The transition from OldAMRElliptic is complete and the OldAMRElliptic
  library no longer appears in the released code base.  

- We have moved to a new "releasedExamples" directory which contains:

    AMRPoisson
    AMRGodunov
    AMRINS
    EBMenagerie
    EBAMRPoisson
    EBAMRGodunov
    EBAMRINS
    MultiDimPhase

  with cleaned up source code, input files, and GNUMakefiles.

- Chombo can now be built inside a Chombo namespace. This can be helpful for
  people integrating their packages into larger software projects.   

- Chombo now has the capability (using namespaces and a moderately complex
  build process) to do mixed-dimensional problems. See the users guide and
  MultiDimPhase example for details. 

- Code which is dimension-independent has been removed from the BoxTools
  library and put into its own BaseTools library.

- Documentation is now included inside the Chombo release itself (in the
  Chombo/doc directory). 

- Chombo is distributed through a branch of our Subversion revision control
  system instead of by tar files.

- By popular demand, Chombo now includes tools to support AMR constrained
  transport schemes.  We don't have an example using these tools but we now
  have several Chombo users of this capability so it is now available to all
  our users.


Release Notes for Chombo version 3.0             April 2009

This is a major release of the core Chombo libraries.

Changes of note:

- The new design for AMR Elliptic is the default elliptic solver in Chombo now.
  The old solver has been moved to OldAMRElliptic and is still made available
  but is no longer being supported or updated.  All examples now use the new
  solver.

- Significant parallel performance upgrades have been implemented.  The core
  hyperbolic and elliptic libraries are built to run in the range of 10,000
  processors.

- This is the first release of Embedded Boundary Chombo.  This includes:
    EBTools
    EBAMRTools
    EBAMRElliptic
    EBAMRTimeDependent

- Two significant new examples are now being released: 

    AMRINS:   Incompressible Navier-Stokes
    EBAMRINS: ditto, but with Embedded Boundary methods.


Release Notes for Chombo version 2.0             May 2007

You can contact the Chombo development team at <chombo@hpcrdm.lbl.gov>

This is a major release of the core Chombo libraries.

changes of note:

 - Some examples have been pruned out to provide a simpler presentation

 - Many significant performance improvements have been made to the AMRTools.

 - There are two independent AMR Elliptic API's in Chombo 2.0.  The original
   AMRElliptic, and the new EllipticDesign.  AMRElliptic will no longer be
   receiving improvements. You would be advised to begin migration of your
   elliptic solves to the new API.  The new EllipticDesign solver performs
   better, and has many improvements to enable better parallel performance.

 - AMRTimeDependent has a new more generalized API.

 - some -D compile-time definitions have been changed
    * HDF5 -> CH_USE_HDF5 (C/C++ preprocessing)
    * MPI -> CH_MPI (C/C++ preprocessing)
    * The{Zero,Unit}Vector -> {IntVect::Zero,IntVect::Unit} (IntVect.H)
    * ENABLE_MEMORY_TRACKING -> CH_USE_MEMORY_TRACKING (C/C++ preprocessing)
    * Chombo now uses it's own assert macro CH_assert

 - Chombo 2.0 provides a new set of code instrumentation macros
          CH_TIMER
          CH_TIME
          CH_START
          CH_STOP
          CH_TIMER_REPORT
   which can be compiled in with the -DTIMER compiler option.  They are turned
   on and off with the CH_TIMER environment variable.  More details available
   in the Chombo Design Document


Release Notes for Chombo version 1.5             April 2006

You can contact the Chombo development team at <chombo@hpcrdm.lbl.gov>

This is a development release of Chombo.  It is a work-in-progress provided
to ANAG collaborators and early adopters of new Chombo functionality.
Please do not distribute it to anyone outside your research group.  It quite
likely has more bugs than a full Chombo release.  The Chombo team asks for
your assistance in finding these bugs.  Please report all problems to the
Chombo team at the email address above.  Please describe the compilers,
operating system, libraries and anything unusual about the computer you
used.  We try to respond promptly, though of course we can't guarantee
anything.


This file describes changes to Chombo since Release 1.4.

Backwardly incompatible changes:

  - The elliptic solver classes have changed dramatically

  - The MPI cpp macro variable has changed to CH_MPI

  - The HDF5 cpp macro variable has changed to CH_USE_HDF5

  - The BinFab class has a different API

  - C/C++ comments are no longer ignored in Fortran code, or header
    files included in Fortran code, so the comments should always be
    between "#ifdef CH_LANG_CC" ... "#endif"

New features in this development release include:

  - support for embedded boundary and multifluid packages, available
    under separate license from ANAG

  - new InfiniteDomain library for solving Poisson eqn with infinite-domain
    (i.e. open) boundary condition on node-centered grids (requires FFTW
    library)

  - some new example programs and many new test programs

  - a new copyright license (see Chombo/Copyright.{txt,H,fh})

  - new LoadBalancer and ChomboCompare utilities in Chombo/lib/util

  - a new Complex class (see Chombo/lib/src/BoxTools/CH_Complex.H)

  - a new "CH_assert()" macro that should be used instead of "assert()"

  - ChomboFortran support for "C" arrays, Vector<>, Complex

  - new Chombo::Timer class, and built-in timing in many Chombo classes,
    built by default and enabled when the environment variable "CH_TIMER"
    is set; running 'make' with 'USE_TIMER=FALSE' will build without this code

  - optional feature to automatically track memory use in Chombo data
    structures, enabled with the 'make' variable "USE_MT=TRUE"

  - use of HDF5 library can be disabled by putting "USE_HDF=FALSE"
    on the make command line

  - support for 64bit pointers on AMD Opteron and Athlon64 systems and IBM Power

  - new, or updated, support for MacOS, *BSD, HP-UX and Cray operating systems

  - support for Intel version 8.x and 9.x compilers on Linux

  - support for GNU gcc v3.4.x and v4.x compilers

  - support for PathScale v2.1 compilers

  - support for HDF5 v1.6.x

  - better support for parallel build using 'make -j#'

  - better support for profiling (make PROFILE=TRUE run ; make profile)

  - support for the NERSC "jacquard" and "bassi" parallel computer systems

  - Chombo HDF5 header files no long conflict with HDF5 header files
    on case-insensitive filesystems

  - more verbosity when building the code can be enabled by
    putting "ECHO=" [sic] on the make command line, less verbosity
    by using "QUIET=@"

  - various bug fixes, functionality  and performance improvements

  - ability to start time-dependent AMR codes (using the AMRTimeDependent 
    library) at a non-zero initial time 

  - experimental support for using data structures for multiple dimensions
    simultaneously
    (called "multidim mode")

