#solver stuff
#1 gsrb, 0 point jacobi	
num_smooth = 16
num_mg = 1
max_iterations = 100
tolerance = 1.0e-6
hang = 1.0e-10
#1 vcycle, 2 wcycle and so on
mg_num_cycles = 1
#if constant coef lambda = -eta
use_constant_coef = false
lambda_only       = false
lambda_value    = -0.0004
acoef_value  = 0.5
eta_value    = 0.0006
which_eta = 1
which_beta = 1
which_lambda =1
which_vel = 2

eta_eps = 0.1
# 0 almost nothing
# 1 latex output only
# 2 bunch more stuff
testverbosity = 1
# 1 if you want error in an hdf5 file
do_error_output = 0

# bc flags
#    0 = Neumann with value
#    1 = Dirichlet with value 
#    2 = Neumann Trig
#    3 = Dirichlet Trig
eb_bc_type     = 1
domain_bc_type = 1
order_ebbc     = 2
domain_bc_value = 0.
eb_bc_value = 0.

# Sine frequency multipliers to use
# for when bcs are trig
trig = 2.0 2.0 2.0

# alpha*I + beta*laplacian
alpha = 1.0
beta = -1.0e-5

#values for when bcs are value
#domain_bc_value = 0.0
#eb_bc_value     = 0.0


###GRID STUFF
max_level    = 0
ref_ratio    = 2 2 2 2 2 
n_cells      =  32 32 32

block_factor = 8
fill_ratio   = 0.7
buffer_size  = 2
max_grid_size = 16

##GEOMETRY STUFF
domain_length = 1.0 1.0 1.0


# 5 sphere
 which_geom = 5
 sphere_center = 0.5 0.5 0.5
 sphere_radius  = 0.2	
 inside = false
do_file_output = true
#auto gen ghost
ghostPhi = 4 4 4 
ghostRhs = 4 4 4 
#auto gen num_precond
num_pre_cond_iters = 4
