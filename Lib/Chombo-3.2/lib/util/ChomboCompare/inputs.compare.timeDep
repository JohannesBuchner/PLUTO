#inputs file for comparison utility program -- time-dependent case
# (uses a series of plotfiles)
# this example takes a series of fine single-level "exact" solutions
# and a corresponding series of AMR coarse "computed" solutions.

#if "same size" is 1, then both "exact" and "computed" solutions are 
#at the same resolution.  They can both be AMR solutions, but they should 
#have the same grids
compare.sameSize = 0

#file root for "exact" solution (single-level fine-resolution solution)
compare.exactRoot = plt512.

#file root containing "computed" solution (which may be AMR )
compare.computedRoot = plt064-128.

#name of file into which to write error plotfile
compare.errorRoot = err.

#these specify the series of plotfiles to be compared.  The following inputs 
#result in this series of comparisons (in 2d -- in 3d the "2d" is replaced 
#with "3d":
#    "computed" solution      "exact" solution
#  plt064-128.0000.2d.hdf5  plt512.0000.2d.hdf5
#  plt064-128.0002.2d.hdf5  plt512.0016.2d.hdf5
#  plt064-128.0004.2d.hdf5  plt512.0032.2d.hdf5
#  plt064-128.0006.2d.hdf5  plt512.0048.2d.hdf5



compare.isTimeDep = 1
compare.numCrseStart = 0
compare.numCrseFinish = 6
compare.crseStep = 2
compare.mult = 8
compare.intFieldWidth = 4

#dump out a plotfile of the error?
compare.doPlots = 1

#which variables to compute error for
compare.error_var = xVel yVel divergence vorticity theta adv

#these variables are not compared against a finer plotfile
#(it's assumed that the "exact" solution is 0)
compare.no_average_var = divergence

