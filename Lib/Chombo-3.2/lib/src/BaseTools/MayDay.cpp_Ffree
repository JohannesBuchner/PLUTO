#ifdef CH_LANG_CC
/*
*      _______              __
*     / ___/ /  ___  __ _  / /  ___
*    / /__/ _ \/ _ \/  V \/ _ \/ _ \
*    \___/_//_/\___/_/_/_/_.__/\___/
*    Please refer to Copyright.txt, in Chombo's root directory.
*/
#endif

#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
using std::cerr;
using namespace std;

#include "MayDay.H"
#include "CHOMBO_VERSION.H"

//
// The definition of our NULL string used as default argument.
//
const char* MayDay::nullString = "";

#define bl_str(s)  # s
#define bl_xstr(s) bl_str(s)

//
// The definition of our version string.
//
const char * const MayDay::version =

"MayDay version "
bl_xstr(CH_VERSION_MAJOR)
"."
bl_xstr(CH_VERSION_MINOR)
" built "
__DATE__
" at "
__TIME__;

#undef bl_str
#undef bl_xstr

//
// This is used by MayDay::Error(), MayDay::Abort(), and MayDay::Assert()
// to ensure that when writing the message to stderr, that no additional
// heap-based memory is allocated.
//

static void write_to_stderr_without_buffering (const char* a_str)
{
  //
  // Flush all buffers.
  //
  fflush(NULL);

  if (a_str)
  {
    //
    // Add some `!'s and a newline to the string.
    //
    const char * const end = " !!!\n";

    fwrite(a_str, strlen(a_str), 1, stderr);
    fwrite(end, strlen(end), 1, stderr);
  }
}

void MayDay::Error(const char* a_msg)
{
    write_to_stderr_without_buffering(a_msg);
    abort();
}

void MayDay::Abort(const char* a_msg)
{
    write_to_stderr_without_buffering(a_msg);
    abort();
}

void MayDay::Warning(const char* a_msg)
{
    write_to_stderr_without_buffering(a_msg);
}
