## This file defines variables for use on the login nodes of the NERSC Linux
## machine 'franklin'.  
##
## NOTE: everything is always in 64bit mode

makefiles+=local/Make.defs.franklin

CXX=pgCC
FC=ftn
MPICXX=CC -target=linux
USE_64=TRUE
USE_MT=TRUE

CH_CPP=$(CXX) -E

# for PGI compiler
# with franklin quadcore update, no longer need to specify arch  
#cxxoptflags += -O2 -Minline -Mvect=sse -Munroll=c:3 -Mnoframe -Mlre -tp amd64e
cxxoptflags += -fast -O2 -Minline -Mvect=sse -Munroll=c:3
#foptflags += -g -Minfo -r8 -fast -O3 -Mvect=sse -Munroll=c:3 #-tp amd64e
foptflags += -r8 -fast -O3 -Mvect=sse -Munroll=c:3

# Add --display_error_number to get the warning numbers to enable supression
# Here are two examples of warnings that are known, and are supressed:
#"../../../src/TrigBCFlux.H", line 19: warning #611-D: overloaded virtual
#          function "BaseBCValue::value" is only partially overridden in class "TrigBCFlux"
#"ReductionCopier.H", line 141: warning #997-D: overloaded function
#          "Copier::define" is hidden by "ReductionCopier::define" -- virtual function override intended?
cxxcomflags += --display_error_number --diag_suppress 611,997



# hints for pathscale
#cxxoptflags += -O2 
#foptflags += -O3 
#and add to exe -L/opt/pgi/7.1.6/linux86-64/7.1-6/lib -lpgc

# hints for GNU compilers
#cxxoptflags += -march=opteron -ffast-math -O3
#foptflags += -march=opteron -ffast-math -O3
#add to exe -L/opt/pgi/7.0.7/linux86-64/7.0/lib -lpgf90 -lpgf90rtl -lpgftnrtl -lpgc

# With Catamount, try the -DCH_DISABLE_SIGNALS macro
#cxxcomflags += -g -DCH_DISABLE_SIGNALS
#cppdbgflags += -DCH_DISABLE_SIGNALS
#cxxdbgflags += -g -DCH_DISABLE_SIGNALS 

# The appropriate 'module' must be loaded for this to work.
# For serial, do    'module load hdf5'
# For parallel, do  'module load hdf5_par'
# To use the 64bit compilation model of xlC/xlf, you should set USE_64=TRUE and:
#  for serial, do   'module load hdf5_64'
#  for parallel, do 'module load hdf5_par_64'

ifneq ($(USE_HDF),FALSE)
  # The NERSC HDF5 modules use different variables in different HDF versions (not smart)
  #[NOTE: the HDF5C variable in some of the modules has options that don't compile Chombo]
  HDFINCFLAGS=-I$(HDF5_DIR_NERSC)/include 
  HDFMPIINCFLAGS=-I$(HDF5_DIR_NERSC)/include 
  ifeq ($(HDF5_LIB),)
    HDFLIBFLAGS=$(HDF5)
    HDFMPILIBFLAGS=$(HDF5)
  else
    HDFLIBFLAGS=$(HDF5_LIB)
    HDFMPILIBFLAGS=$(HDF5_LIB)
  endif
endif

# Check that the right HDF module is loaded.
ifneq ($(USE_HDF),FALSE)
  ifeq ($(MPI),TRUE)
    ifeq ($(findstring parallel,$(HDF5_DIR_NERSC)),)
      $(error HDF5 directory [$(HDF5_DIR_NERSC)] is not parallel but MPI is TRUE.  Did you load the right module?)
    endif
  else
    ifeq ($(findstring serial,$(HDF5_DIR_NERSC)),)
      $(error HDF5 directory [$(HDF5_DIR_NERSC)] is not serial but MPI is FALSE.  Did you load the right module?)
    endif
    ifeq ($(USE_64),TRUE)
      ifneq ($(findstring 64,$(HDF5_DIR_NERSC)),64)
        $(error compiling in 64bit mode, but HDF5 directory is not 64bit.  Did you load the right module?)
      endif
    endif
  endif
endif


ifeq ($(USE_64),FALSE)
  $(error Are you sure you want to run non-64bit?)
endif
